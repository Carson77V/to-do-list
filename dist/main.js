(()=>{"use strict";let t=[];function e(t,e){const n=document.createElement("div");n.classList.add("task"),n.classList.add("task-span");const c=document.createElement("div"),s=document.createElement("div");c.classList.add("task-start"),s.classList.add("task-end");const d=document.createElement("span");d.classList.add("check-button");const l=document.createElement("div");l.classList.add("task-title"),l.textContent=t;const o=document.createElement("div");o.classList.add("task-date"),o.textContent="1/2/2023";const a=document.createElement("img");return a.src="images/edit.svg",a.setAttribute("alt","edit button"),s.appendChild(o),s.appendChild(a),c.appendChild(d),c.appendChild(l),n.appendChild(c),n.appendChild(s),n}localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);let n=[];document.querySelectorAll(".menu-item").forEach(o);const c=document.querySelector(".projects"),s=t;for(let t=0;t<s.length;t++)c.appendChild(d(s[t]));function d(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const s=document.createElement("img");return s.setAttribute("src","./images/trash-2.svg"),s.setAttribute("alt","trash icon"),s.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(s),o(n),n}function l(t){t.srcElement.closest(".menu-form").remove()}function o(t){t.addEventListener("click",(t=>{const c=document.querySelector(".menu-selected");null!=c&&c.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),t.srcElement.firstChild.textContent,document.querySelector("#tasks"),n.forEach(e)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id","project-title"),c.setAttribute("name","projectTitle"),c.setAttribute("maxlength","15");const s=document.createElement("div");s.classList.add("project-buttons");const o=document.createElement("button");o.classList.add("add-button"),o.setAttribute("type","button"),o.textContent="Add";const a=document.createElement("button");return a.classList.add("cancel-button"),a.setAttribute("type","button"),a.textContent="Cancel",o.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),c=n.firstChild.firstChild.value;var s;n.insertAdjacentElement("afterend",d(c)),s=c,t.push(s),localStorage.setItem("projectTitles",t),l(e)}(e)})),a.addEventListener("click",(t=>{l(t)})),s.appendChild(o),s.appendChild(a),n.appendChild(c),n.appendChild(s),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,