(()=>{"use strict";let t=[];function e(t){const e=document.createElement("option");return e.textContent=t,e.setAttribute("value",t),e}localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);let n=[];const c=document.querySelector(".add-task");c.addEventListener("click",(()=>{document.querySelector("#tasks").insertBefore(function(t,n,c,d){const s=document.createElement("div");s.classList.add("task-span"),s.classList.add("task-form");const o=document.createElement("form");o.setAttribute("action",""),o.setAttribute("method","post");const a=document.createElement("div");a.classList.add("top-form-task");const l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("id","title-edit"),l.setAttribute("placeholder","Title"),l.setAttribute("name","title-edit"),l.setAttribute("maxlength","20"),l.value=null;const i=document.createElement("div"),r=document.createElement("label");r.textContent="Date: ",r.setAttribute("for","date");const u=document.createElement("input");u.setAttribute("type","date"),u.setAttribute("id","date"),u.setAttribute("name","date"),u.value=null,i.appendChild(r),i.appendChild(u),a.appendChild(l),a.appendChild(i),o.appendChild(a);const m=document.createElement("div");m.classList.add("textarea-div");const p=document.createElement("textarea");p.setAttribute("placeholder","Description"),p.value=null,m.appendChild(p),o.appendChild(m);const E=document.createElement("div");E.classList.add("lower-form-task");const h=document.createElement("div"),C=document.createElement("label");C.textContent="Priority: ",C.setAttribute("for","priority");const b=document.createElement("select");b.setAttribute("name","priority"),b.setAttribute("id","priority"),b.value=3;for(let t=1;t<=3;t++)b.appendChild(e(t));h.appendChild(C),h.appendChild(b);const v=document.createElement("div"),f=document.createElement("button");f.textContent="Del",f.setAttribute("type","button");const A=document.createElement("button");return A.textContent="Save",A.setAttribute("type","button"),v.appendChild(f),v.appendChild(A),E.appendChild(h),E.appendChild(v),o.appendChild(E),s.appendChild(o),s}(),c)})),document.querySelectorAll(".menu-item").forEach(l);const d=document.querySelector(".projects"),s=t;for(let t=0;t<s.length;t++)d.appendChild(o(s[t]));function o(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const d=document.createElement("img");return d.setAttribute("src","./images/trash-2.svg"),d.setAttribute("alt","trash icon"),d.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(d),l(n),n}function a(t){t.srcElement.closest(".menu-form").remove()}function l(t){t.addEventListener("click",(t=>{const e=document.querySelector(".menu-selected");null!=e&&e.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),function(t){document.querySelectorAll(".task-span").forEach((t=>{t.remove()}));const e=n.filter((e=>{if("Today"!=t)return"Important"==t?e.getPriority=1:"All"==t||(e.getProject=t)})),c=document.querySelector(".add-task"),d=document.querySelector("#tasks");e.forEach((t=>{const e=function(t,e){const n=document.createElement("div");n.classList.add("task"),n.classList.add("task-span");const c=document.createElement("div"),d=document.createElement("div");c.classList.add("task-start"),d.classList.add("task-end");const s=document.createElement("span");s.classList.add("check-button");const o=document.createElement("div");o.classList.add("task-title"),o.textContent=t;const a=document.createElement("div");a.classList.add("task-date"),a.textContent="1/2/2023";const l=document.createElement("img");return l.src="images/edit.svg",l.setAttribute("alt","edit button"),d.appendChild(a),d.appendChild(l),c.appendChild(s),c.appendChild(o),n.appendChild(c),n.appendChild(d),n}(t.getTitle(),t.getDate());d.insertBefore(e,c)}))}(t.srcElement.firstChild.textContent)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id","project-title"),c.setAttribute("name","projectTitle"),c.setAttribute("maxlength","15");const d=document.createElement("div");d.classList.add("project-buttons");const s=document.createElement("button");s.classList.add("add-button"),s.setAttribute("type","button"),s.textContent="Add";const l=document.createElement("button");return l.classList.add("cancel-button"),l.setAttribute("type","button"),l.textContent="Cancel",s.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),c=n.firstChild.firstChild.value;var d;n.insertAdjacentElement("afterend",o(c)),d=c,t.push(d),localStorage.setItem("projectTitles",t),a(e)}(e)})),l.addEventListener("click",(t=>{a(t)})),d.appendChild(s),d.appendChild(l),n.appendChild(c),n.appendChild(d),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,