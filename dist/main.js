(()=>{"use strict";let t=[];localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);const e={getTitle(){return this.title},setTitle(t){this.title=t},getDescription(){return this.description},setDescription(t){this.description=t},getDate(){return this.date},setDate(t){this.date=t},getPriority(){return this.priority},setPriority(t){this.priority=t},getProject(){return this.project},setProject(t){this.project=t},getId(){return this.id},setId(t){this.id=t}};function n(t,n,s,d,l){const a=document.createElement("div");a.classList.add("task-span"),a.classList.add("task-form"),a.id=l;const u=document.createElement("form");u.setAttribute("action",""),u.setAttribute("method","post");const m=document.createElement("div");m.classList.add("top-form-task");const p=document.createElement("input");p.setAttribute("type","text"),p.setAttribute("id","title-edit"),p.setAttribute("placeholder","Title"),p.setAttribute("name","title-edit"),p.setAttribute("maxlength","20"),p.value=t;const h=document.createElement("div"),E=document.createElement("label");E.textContent="Date: ",E.setAttribute("for","date");const v=document.createElement("input");v.setAttribute("type","date"),v.setAttribute("id","date"),v.setAttribute("name","date"),v.value=n,h.appendChild(E),h.appendChild(v),m.appendChild(p),m.appendChild(h),u.appendChild(m);const C=document.createElement("div");C.classList.add("textarea-div");const b=document.createElement("textarea");b.setAttribute("placeholder","Description"),b.value=s,C.appendChild(b),u.appendChild(C);const g=document.createElement("div");g.classList.add("lower-form-task");const f=document.createElement("div"),A=document.createElement("label");A.textContent="Priority: ",A.setAttribute("for","priority");const y=document.createElement("select");y.setAttribute("name","priority"),y.setAttribute("id","priority");for(let t=3;t>=1;t--)y.appendChild(i(t));y.value=d,f.appendChild(A),f.appendChild(y);const L=document.createElement("div"),k=document.createElement("button");k.textContent="Del",k.setAttribute("type","button");const S=document.createElement("button");return S.textContent="Save",S.setAttribute("type","button"),S.addEventListener("click",(t=>{!function(t){const n=t.srcElement.closest(".task-form"),i=n.querySelector("#title-edit").value,s=n.querySelector("#date").value,d=n.querySelector("textarea").value,l=n.querySelector("#priority").value;let a=n.id;"null"==n.id?(console.log(a),a=c.length,c.push(((t,n,i,c,s,r)=>{let o=Object.create(e);return o.title=t,o.description=i,o.date=n,o.priority=c,o.project=s,o.id=r,o})(i,s,d,l,o,a))):(c[+a].setTitle(i),c[+a].setDate(s),c[+a].setDescription(d),c[+a].setPriority(l)),r(o),n.remove()}(t)})),L.appendChild(k),L.appendChild(S),g.appendChild(f),g.appendChild(L),u.appendChild(g),a.appendChild(u),a}function i(t){const e=document.createElement("option");return e.textContent=t,e.setAttribute("value",t),e}let c=[];const s=document.querySelector(".add-task");function r(t){document.querySelectorAll(".task-span").forEach((t=>{t.remove()}));const e=c.filter((e=>"Today"==t?function(t){const e=new Date,n=t.split("-");return n[0]<e.getFullYear()||n[1]<e.getMonth()||n[2]<=e.getDate()}(e.getDate()):"Important"==t?1==e.getPriority():"All"==t||e.getProject()==t)),i=document.querySelector(".add-task"),s=document.querySelector("#tasks");e.forEach((t=>{const e=function(t,e,i){const s=document.createElement("div");s.classList.add("task"),s.classList.add("task-span"),s.id=i;const r=document.createElement("div"),o=document.createElement("div");r.classList.add("task-start"),o.classList.add("task-end");const d=document.createElement("span");d.classList.add("task-circle"),d.addEventListener("click",(t=>{!function(t){const e=t.srcElement.parentElement.parentElement,n=taskSearch(e);c.splice(n,1),e.remove()}(t)}));const l=document.createElement("div");l.classList.add("task-title"),l.textContent=t;const a=document.createElement("div");a.classList.add("task-date"),a.textContent=e;const u=document.createElement("img");return u.src="images/edit.svg",u.setAttribute("alt","edit button"),u.addEventListener("click",(t=>{!function(t){const e=t.srcElement.parentElement.parentElement,i=+e.id;console.log(i),e.insertAdjacentElement("afterend",n(c[i].getTitle(),c[i].getDate(),c[i].getDescription(),c[i].getPriority(),c[i].getId())),e.remove()}(t)})),o.appendChild(a),o.appendChild(u),r.appendChild(d),r.appendChild(l),s.appendChild(r),s.appendChild(o),s}(t.getTitle(),t.getDate(),t.getId());s.insertBefore(e,i)}))}s.addEventListener("click",(()=>{document.querySelector("#tasks").insertBefore(n(null,null,null,3,"null"),s)}));let o="All";document.querySelectorAll(".menu-item").forEach(m);const d=document.querySelector(".projects"),l=t;for(let t=0;t<l.length;t++)d.appendChild(a(l[t]));function a(e){const n=document.createElement("div");n.classList.add("menu-item");const i=document.createElement("div");i.textContent=e;const c=document.createElement("img");return c.setAttribute("src","./images/trash-2.svg"),c.setAttribute("alt","trash icon"),c.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(i),n.appendChild(c),m(n),n}function u(t){t.srcElement.closest(".menu-form").remove()}function m(t){t.addEventListener("click",(t=>{const e=document.querySelector(".menu-selected");null!=e&&e.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),o=t.srcElement.firstChild.textContent,r(o)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","project-title"),i.setAttribute("name","projectTitle"),i.setAttribute("maxlength","15");const c=document.createElement("div");c.classList.add("project-buttons");const s=document.createElement("button");s.classList.add("add-button"),s.setAttribute("type","button"),s.textContent="Add";const r=document.createElement("button");return r.classList.add("cancel-button"),r.setAttribute("type","button"),r.textContent="Cancel",s.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),i=n.firstChild.firstChild.value;var c;n.insertAdjacentElement("afterend",a(i)),c=i,t.push(c),localStorage.setItem("projectTitles",t),u(e)}(e)})),r.addEventListener("click",(t=>{u(t)})),c.appendChild(s),c.appendChild(r),n.appendChild(i),n.appendChild(c),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,