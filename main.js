(()=>{"use strict";let t=[];localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);const e={getTitle(){return this.title},setTitle(t){this.title=t},getDescription(){return this.description},setDescription(t){this.description=t},getDate(){return this.date},setDate(t){this.date=t},getPriority(){return this.priority},setPriority(t){this.priority=t},getProject(){return this.project},setProject(t){this.project=t}};function n(t,n,s,o){const d=document.createElement("div");d.classList.add("task-span"),d.classList.add("task-form");const a=document.createElement("form");a.setAttribute("action",""),a.setAttribute("method","post");const u=document.createElement("div");u.classList.add("top-form-task");const m=document.createElement("input");m.setAttribute("type","text"),m.setAttribute("id","title-edit"),m.setAttribute("placeholder","Title"),m.setAttribute("name","title-edit"),m.setAttribute("maxlength","20"),m.value=t;const p=document.createElement("div"),h=document.createElement("label");h.textContent="Date: ",h.setAttribute("for","date");const E=document.createElement("input");E.setAttribute("type","date"),E.setAttribute("id","date"),E.setAttribute("name","date"),E.value=n,p.appendChild(h),p.appendChild(E),u.appendChild(m),u.appendChild(p),a.appendChild(u);const C=document.createElement("div");C.classList.add("textarea-div");const v=document.createElement("textarea");v.setAttribute("placeholder","Description"),v.value=s,C.appendChild(v),a.appendChild(C);const b=document.createElement("div");b.classList.add("lower-form-task");const f=document.createElement("div"),g=document.createElement("label");g.textContent="Priority: ",g.setAttribute("for","priority");const A=document.createElement("select");A.setAttribute("name","priority"),A.setAttribute("id","priority"),A.value=o;for(let t=3;t>=1;t--)A.appendChild(c(t));f.appendChild(g),f.appendChild(A);const y=document.createElement("div"),L=document.createElement("button");L.textContent="Del",L.setAttribute("type","button");const k=document.createElement("button");return k.textContent="Save",k.setAttribute("type","button"),k.addEventListener("click",(t=>{!function(t){const n=t.srcElement.closest("form"),c=n.querySelector("#title-edit").value,s=n.querySelector("#date").value,o=n.querySelector("textarea").value,d=n.querySelector("#priority").value;r.push(((t,n,c,r,s)=>{let i=Object.create(e);return i.title=t,i.description=c,i.date=n,i.priority=r,i.project=s,i})(c,s,o,d,l)),i(l),n.parentElement.remove()}(t)})),y.appendChild(L),y.appendChild(k),b.appendChild(f),b.appendChild(y),a.appendChild(b),d.appendChild(a),d}function c(t){const e=document.createElement("option");return e.textContent=t,e.setAttribute("value",t),e}let r=[];const s=document.querySelector(".add-task");function i(t){document.querySelectorAll(".task-span").forEach((t=>{t.remove()}));const e=r.filter((e=>"Today"==t?function(t){const e=new Date,n=t.split("-");return n[0]<e.getFullYear()||n[1]<e.getMonth()||n[2]<=e.getDate()}(e.getDate()):"Important"==t?1==e.getPriority():"All"==t||e.getProject()==t)),c=document.querySelector(".add-task"),s=document.querySelector("#tasks");e.forEach((t=>{const e=function(t,e){const c=document.createElement("div");c.classList.add("task"),c.classList.add("task-span");const s=document.createElement("div"),i=document.createElement("div");s.classList.add("task-start"),i.classList.add("task-end");const l=document.createElement("span");l.classList.add("task-circle"),l.addEventListener("click",(t=>{!function(t){const e=t.srcElement.parentElement.parentElement,n=o(e);r.splice(n,1),e.remove()}(t)}));const d=document.createElement("div");d.classList.add("task-title"),d.textContent=t;const a=document.createElement("div");a.classList.add("task-date"),a.textContent=e;const u=document.createElement("img");return u.src="images/edit.svg",u.setAttribute("alt","edit button"),u.addEventListener("click",(t=>{!function(t){const e=t.srcElement.parentElement.parentElement;o(e),e.appendChild(n())}(t)})),i.appendChild(a),i.appendChild(u),s.appendChild(l),s.appendChild(d),c.appendChild(s),c.appendChild(i),c}(t.getTitle(),t.getDate());s.insertBefore(e,c)}))}function o(t){const e=function(t){return t.querySelector(".task-title").textContent+"."+t.querySelector(".task-date").textContent}(t).split(".");console.log(e);const n=[];for(let t=0;t<r.length;t++)r[t].getTitle()===e[0]&&n.push(t);const c=[];for(let t=0;t<n.length;t++)r[n[t]].getDate()==e[1]&&c.push(n[t]);if("All"==l)return c[0];for(let t=0;t<c.length;t++)if(r[c[0]].getProject()===l)return c[t]}s.addEventListener("click",(()=>{document.querySelector("#tasks").insertBefore(n(null,null,null,3),s)}));let l="All";document.querySelectorAll(".menu-item").forEach(p);const d=document.querySelector(".projects"),a=t;for(let t=0;t<a.length;t++)d.appendChild(u(a[t]));function u(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const r=document.createElement("img");return r.setAttribute("src","./images/trash-2.svg"),r.setAttribute("alt","trash icon"),r.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(r),p(n),n}function m(t){t.srcElement.closest(".menu-form").remove()}function p(t){t.addEventListener("click",(t=>{const e=document.querySelector(".menu-selected");null!=e&&e.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),l=t.srcElement.firstChild.textContent,i(l)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id","project-title"),c.setAttribute("name","projectTitle"),c.setAttribute("maxlength","15");const r=document.createElement("div");r.classList.add("project-buttons");const s=document.createElement("button");s.classList.add("add-button"),s.setAttribute("type","button"),s.textContent="Add";const i=document.createElement("button");return i.classList.add("cancel-button"),i.setAttribute("type","button"),i.textContent="Cancel",s.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),c=n.firstChild.firstChild.value;var r;n.insertAdjacentElement("afterend",u(c)),r=c,t.push(r),localStorage.setItem("projectTitles",t),m(e)}(e)})),i.addEventListener("click",(t=>{m(t)})),r.appendChild(s),r.appendChild(i),n.appendChild(c),n.appendChild(r),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,