(()=>{"use strict";let t=[];localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);const e={getTitle(){return this.title},setTitle(t){this.title=t},getDescription(){return this.description},setDescription(t){this.description=t},getDate(){return this.date},setDate(t){this.date=t},getPriority(){return this.priority},setPriority(t){this.priority=t},getProject(){return this.project},setProject(t){this.project=t}};function n(t){const e=document.createElement("option");return e.textContent=t,e.setAttribute("value",t),e}let c=[];const s=document.querySelector(".add-task");function r(t){document.querySelectorAll(".task-span").forEach((t=>{t.remove()}));const e=c.filter((e=>{if("Today"!=t)return"Important"==t?1==e.getPriority:"All"==t||e.getProject()==t})),n=document.querySelector(".add-task"),s=document.querySelector("#tasks");e.forEach((t=>{const e=function(t,e){const n=document.createElement("div");n.classList.add("task"),n.classList.add("task-span");const c=document.createElement("div"),s=document.createElement("div");c.classList.add("task-start"),s.classList.add("task-end");const r=document.createElement("span");r.classList.add("task-circle");const i=document.createElement("div");i.classList.add("task-title"),i.textContent=t;const o=document.createElement("div");o.classList.add("task-date"),o.textContent=e;const d=document.createElement("img");return d.src="images/edit.svg",d.setAttribute("alt","edit button"),s.appendChild(o),s.appendChild(d),c.appendChild(r),c.appendChild(i),n.appendChild(c),n.appendChild(s),n}(t.getTitle(),t.getDate());s.insertBefore(e,n)}))}s.addEventListener("click",(()=>{document.querySelector("#tasks").insertBefore(function(t,s,o,d){const l=document.createElement("div");l.classList.add("task-span"),l.classList.add("task-form");const a=document.createElement("form");a.setAttribute("action",""),a.setAttribute("method","post");const u=document.createElement("div");u.classList.add("top-form-task");const m=document.createElement("input");m.setAttribute("type","text"),m.setAttribute("id","title-edit"),m.setAttribute("placeholder","Title"),m.setAttribute("name","title-edit"),m.setAttribute("maxlength","20"),m.value=t;const p=document.createElement("div"),h=document.createElement("label");h.textContent="Date: ",h.setAttribute("for","date");const E=document.createElement("input");E.setAttribute("type","date"),E.setAttribute("id","date"),E.setAttribute("name","date"),E.value=s,p.appendChild(h),p.appendChild(E),u.appendChild(m),u.appendChild(p),a.appendChild(u);const C=document.createElement("div");C.classList.add("textarea-div");const b=document.createElement("textarea");b.setAttribute("placeholder","Description"),b.value=o,C.appendChild(b),a.appendChild(C);const v=document.createElement("div");v.classList.add("lower-form-task");const f=document.createElement("div"),A=document.createElement("label");A.textContent="Priority: ",A.setAttribute("for","priority");const y=document.createElement("select");y.setAttribute("name","priority"),y.setAttribute("id","priority"),y.value=d;for(let t=1;t<=3;t++)y.appendChild(n(t));f.appendChild(A),f.appendChild(y);const g=document.createElement("div"),L=document.createElement("button");L.textContent="Del",L.setAttribute("type","button");const k=document.createElement("button");return k.textContent="Save",k.setAttribute("type","button"),k.addEventListener("click",(t=>{!function(t){const n=t.srcElement.closest("form"),s=n.querySelector("#title-edit").value,o=n.querySelector("#date").value,d=n.querySelector("textarea").value,l=n.querySelector("#priority").value;c.push(((t,n,c,s,r)=>{let i=Object.create(e);return i.title=t,i.description=c,i.date=n,i.priority=s,i.project=r,i})(s,o,d,l,i)),r(i),n.parentElement.remove()}(t)})),g.appendChild(L),g.appendChild(k),v.appendChild(f),v.appendChild(g),a.appendChild(v),l.appendChild(a),l}(null,null,null,3),s)}));let i="All";document.querySelectorAll(".menu-item").forEach(u);const o=document.querySelector(".projects"),d=t;for(let t=0;t<d.length;t++)o.appendChild(l(d[t]));function l(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const s=document.createElement("img");return s.setAttribute("src","./images/trash-2.svg"),s.setAttribute("alt","trash icon"),s.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(s),u(n),n}function a(t){t.srcElement.closest(".menu-form").remove()}function u(t){t.addEventListener("click",(t=>{const e=document.querySelector(".menu-selected");null!=e&&e.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),i=t.srcElement.firstChild.textContent,r(i)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id","project-title"),c.setAttribute("name","projectTitle"),c.setAttribute("maxlength","15");const s=document.createElement("div");s.classList.add("project-buttons");const r=document.createElement("button");r.classList.add("add-button"),r.setAttribute("type","button"),r.textContent="Add";const i=document.createElement("button");return i.classList.add("cancel-button"),i.setAttribute("type","button"),i.textContent="Cancel",r.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),c=n.firstChild.firstChild.value;var s;n.insertAdjacentElement("afterend",l(c)),s=c,t.push(s),localStorage.setItem("projectTitles",t),a(e)}(e)})),i.addEventListener("click",(t=>{a(t)})),s.appendChild(r),s.appendChild(i),n.appendChild(c),n.appendChild(s),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,