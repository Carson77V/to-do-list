(()=>{"use strict";let t=[];localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);const e={getTitle(){return this.title},setTitle(t){this.title=t},getDescription(){return this.description},setDescription(t){this.description=t},getDate(){return this.date},setDate(t){this.date=t},getPriority(){return this.priority},setPriority(t){this.priority=t},getProject(){return this.project},setProject(t){this.project=t}};function n(t){const e=document.createElement("option");return e.textContent=t,e.setAttribute("value",t),e}let c=[];const s=document.querySelector(".add-task");s.addEventListener("click",(()=>{document.querySelector("#tasks").insertBefore(function(t,s,r,o){const d=document.createElement("div");d.classList.add("task-span"),d.classList.add("task-form");const l=document.createElement("form");l.setAttribute("action",""),l.setAttribute("method","post");const a=document.createElement("div");a.classList.add("top-form-task");const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id","title-edit"),u.setAttribute("placeholder","Title"),u.setAttribute("name","title-edit"),u.setAttribute("maxlength","20"),u.value=t;const m=document.createElement("div"),p=document.createElement("label");p.textContent="Date: ",p.setAttribute("for","date");const h=document.createElement("input");h.setAttribute("type","date"),h.setAttribute("id","date"),h.setAttribute("name","date"),h.value=s,m.appendChild(p),m.appendChild(h),a.appendChild(u),a.appendChild(m),l.appendChild(a);const E=document.createElement("div");E.classList.add("textarea-div");const C=document.createElement("textarea");C.setAttribute("placeholder","Description"),C.value=r,E.appendChild(C),l.appendChild(E);const b=document.createElement("div");b.classList.add("lower-form-task");const v=document.createElement("div"),f=document.createElement("label");f.textContent="Priority: ",f.setAttribute("for","priority");const A=document.createElement("select");A.setAttribute("name","priority"),A.setAttribute("id","priority"),A.value=o;for(let t=1;t<=3;t++)A.appendChild(n(t));v.appendChild(f),v.appendChild(A);const y=document.createElement("div"),g=document.createElement("button");g.textContent="Del",g.setAttribute("type","button");const L=document.createElement("button");return L.textContent="Save",L.setAttribute("type","button"),L.addEventListener("click",(t=>{!function(t){const n=t.srcElement.closest("form"),s=n.querySelector("#title-edit").value,r=n.querySelector("#date").value,o=n.querySelector("textarea").value,d=n.querySelector("#priority").value;c.push(((t,n,c,s,i)=>{let r=Object.create(e);return r.title=t,r.description=c,r.date=n,r.priority=s,r.project=i,r})(s,r,o,d,i)),console.log(c[0].getTitle())}(t)})),y.appendChild(g),y.appendChild(L),b.appendChild(v),b.appendChild(y),l.appendChild(b),d.appendChild(l),d}(null,null,null,3),s)}));let i="All";document.querySelectorAll(".menu-item").forEach(a);const r=document.querySelector(".projects"),o=t;for(let t=0;t<o.length;t++)r.appendChild(d(o[t]));function d(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const s=document.createElement("img");return s.setAttribute("src","./images/trash-2.svg"),s.setAttribute("alt","trash icon"),s.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(s),a(n),n}function l(t){t.srcElement.closest(".menu-form").remove()}function a(t){t.addEventListener("click",(t=>{const e=document.querySelector(".menu-selected");null!=e&&e.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),i=t.srcElement.firstChild.textContent,function(t){document.querySelectorAll(".task-span").forEach((t=>{t.remove()}));const e=c.filter((e=>{if("Today"!=t)return"Important"==t?e.getPriority=1:"All"==t||(e.getProject=t)})),n=document.querySelector(".add-task"),s=document.querySelector("#tasks");e.forEach((t=>{const e=function(t,e){const n=document.createElement("div");n.classList.add("task"),n.classList.add("task-span");const c=document.createElement("div"),s=document.createElement("div");c.classList.add("task-start"),s.classList.add("task-end");const i=document.createElement("span");i.classList.add("task-circle");const r=document.createElement("div");r.classList.add("task-title"),r.textContent=t;const o=document.createElement("div");o.classList.add("task-date"),o.textContent=e;const d=document.createElement("img");return d.src="images/edit.svg",d.setAttribute("alt","edit button"),s.appendChild(o),s.appendChild(d),c.appendChild(i),c.appendChild(r),n.appendChild(c),n.appendChild(s),n}(t.getTitle(),t.getDate());s.insertBefore(e,n)}))}(i)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id","project-title"),c.setAttribute("name","projectTitle"),c.setAttribute("maxlength","15");const s=document.createElement("div");s.classList.add("project-buttons");const i=document.createElement("button");i.classList.add("add-button"),i.setAttribute("type","button"),i.textContent="Add";const r=document.createElement("button");return r.classList.add("cancel-button"),r.setAttribute("type","button"),r.textContent="Cancel",i.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),c=n.firstChild.firstChild.value;var s;n.insertAdjacentElement("afterend",d(c)),s=c,t.push(s),localStorage.setItem("projectTitles",t),l(e)}(e)})),r.addEventListener("click",(t=>{l(t)})),s.appendChild(i),s.appendChild(r),n.appendChild(c),n.appendChild(s),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,