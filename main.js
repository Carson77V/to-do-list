(()=>{"use strict";let t=[];localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);const e=document.querySelector(".projects"),n=t;for(let t=0;t<n.length;t++)e.appendChild(c(n[t]));function c(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const o=document.createElement("img");return o.setAttribute("src","./images/trash-2.svg"),o.setAttribute("alt","trash icon"),o.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),console.log(t),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(o),n}function o(t){t.srcElement.closest(".menu-form").remove()}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const s=document.createElement("input");s.setAttribute("type","text"),s.setAttribute("id","project-title"),s.setAttribute("name","projectTitle");const l=document.createElement("div");l.classList.add("project-buttons");const r=document.createElement("button");r.classList.add("add-button"),r.setAttribute("type","button"),r.textContent="Add";const i=document.createElement("button");return i.classList.add("cancel-button"),i.setAttribute("type","button"),i.textContent="Cancel",r.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),s=n.firstChild.firstChild.value;var l;n.insertAdjacentElement("afterend",c(s)),l=s,t.push(l),localStorage.setItem("projectTitles",t),o(e)}(e)})),i.addEventListener("click",(t=>{o(t)})),l.appendChild(r),l.appendChild(i),n.appendChild(s),n.appendChild(l),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,