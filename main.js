(()=>{"use strict";let t=[];function e(t,e){const n=document.createElement("div");n.classList.add("task"),n.classList.add("task-span");const c=document.createElement("div"),s=document.createElement("div");c.classList.add("task-start"),s.classList.add("task-end");const d=document.createElement("span");d.classList.add("check-button");const o=document.createElement("div");o.classList.add("task-title"),o.textContent=t;const l=document.createElement("div");l.classList.add("task-date"),l.textContent="1/2/2023";const a=document.createElement("img");return a.src="images/edit.svg",a.setAttribute("alt","edit button"),s.appendChild(l),s.appendChild(a),c.appendChild(d),c.appendChild(o),n.appendChild(c),n.appendChild(s),n}localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);let n=[];document.querySelectorAll(".menu-item").forEach(l);const c=document.querySelector(".projects"),s=t;for(let t=0;t<s.length;t++)c.appendChild(d(s[t]));function d(e){const n=document.createElement("div");n.classList.add("menu-item");const c=document.createElement("div");c.textContent=e;const s=document.createElement("img");return s.setAttribute("src","./images/trash-2.svg"),s.setAttribute("alt","trash icon"),s.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(c),n.appendChild(s),l(n),n}function o(t){t.srcElement.closest(".menu-form").remove()}function l(t){t.addEventListener("click",(t=>{const c=document.querySelector(".menu-selected");null!=c&&c.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),t.srcElement.firstChild.textContent,document.querySelectorAll(".task-span").forEach((t=>{t.remove()})),document.querySelector("#tasks"),n.forEach(e)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("id","project-title"),c.setAttribute("name","projectTitle"),c.setAttribute("maxlength","15");const s=document.createElement("div");s.classList.add("project-buttons");const l=document.createElement("button");l.classList.add("add-button"),l.setAttribute("type","button"),l.textContent="Add";const a=document.createElement("button");return a.classList.add("cancel-button"),a.setAttribute("type","button"),a.textContent="Cancel",l.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),c=n.firstChild.firstChild.value;var s;n.insertAdjacentElement("afterend",d(c)),s=c,t.push(s),localStorage.setItem("projectTitles",t),o(e)}(e)})),a.addEventListener("click",(t=>{o(t)})),s.appendChild(l),s.appendChild(a),n.appendChild(c),n.appendChild(s),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,