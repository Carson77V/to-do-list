(()=>{"use strict";let t=[];localStorage.getItem("projectTitles")?t=localStorage.getItem("projectTitles").split(","):localStorage.setItem("projectTitles",[]);const e={getTitle(){return this.title},setTitle(t){this.title=t},getDescription(){return this.description},setDescription(t){this.description=t},getDate(){return this.date},setDate(t){this.date=t},getPriority(){return this.priority},setPriority(t){this.priority=t},getProject(){return this.project},setProject(t){this.project=t},getId(){return this.id},setId(t){this.id=t}};function n(t,n,c,d,a){const u=document.createElement("div");u.classList.add("task-span"),u.classList.add("task-form"),u.id=a;const m=document.createElement("form");m.setAttribute("action",""),m.setAttribute("method","post");const p=document.createElement("div");p.classList.add("top-form-task");const h=document.createElement("input");h.setAttribute("type","text"),h.setAttribute("id","title-edit"),h.setAttribute("placeholder","Title"),h.setAttribute("name","title-edit"),h.setAttribute("maxlength","20"),h.value=t;const E=document.createElement("div"),v=document.createElement("label");v.textContent="Date: ",v.setAttribute("for","date");const b=document.createElement("input");b.setAttribute("type","date"),b.setAttribute("id","date"),b.setAttribute("name","date"),b.value=n,E.appendChild(v),E.appendChild(b),p.appendChild(h),p.appendChild(E),m.appendChild(p);const C=document.createElement("div");C.classList.add("textarea-div");const g=document.createElement("textarea");g.setAttribute("placeholder","Description"),g.value=c,C.appendChild(g),m.appendChild(C);const f=document.createElement("div");f.classList.add("lower-form-task");const y=document.createElement("div"),A=document.createElement("label");A.textContent="Priority: ",A.setAttribute("for","priority");const L=document.createElement("select");L.setAttribute("name","priority"),L.setAttribute("id","priority");for(let t=3;t>=1;t--)L.appendChild(i(t));L.value=d,y.appendChild(A),y.appendChild(L);const x=document.createElement("div"),k=document.createElement("button");k.textContent="Del",k.setAttribute("type","button"),k.addEventListener("click",(t=>{o(t)}));const S=document.createElement("button");return S.textContent="Save",S.setAttribute("type","button"),S.addEventListener("click",(t=>{!function(t){const n=t.srcElement.closest(".task-form"),i=n.querySelector("#title-edit").value,c=n.querySelector("#date").value,d=n.querySelector("textarea").value,o=n.querySelector("#priority").value;let a=n.id;"null"==n.id?(a=s.length,s.push(((t,n,i,s,c,r)=>{let d=Object.create(e);return d.title=t,d.description=i,d.date=n,d.priority=s,d.project=c,d.id=r,d})(i,c,d,o,l,a))):(s[+a].setTitle(i),s[+a].setDate(c),s[+a].setDescription(d),s[+a].setPriority(o)),r(l),n.remove()}(t)})),x.appendChild(k),x.appendChild(S),f.appendChild(y),f.appendChild(x),m.appendChild(f),u.appendChild(m),u}function i(t){const e=document.createElement("option");return e.textContent=t,e.setAttribute("value",t),e}let s=[];const c=document.querySelector(".add-task");function r(t){d();const e=s.filter((e=>"Today"==t?function(t){const e=new Date,n=t.split("-");return n[0]<e.getFullYear()||n[1]<e.getMonth()||n[2]<=e.getDate()}(e.getDate()):"Important"==t?1==e.getPriority():"All"==t||e.getProject()==t)),i=document.querySelector(".add-task"),c=document.querySelector("#tasks");e.forEach((t=>{const e=function(t,e,i,c){const r=document.createElement("div");r.classList.add("task"),r.classList.add("task-span"),r.id=i;const d=document.createElement("div"),l=document.createElement("div");d.classList.add("task-start"),l.classList.add("task-end");const a=document.createElement("span");a.classList.add("task-circle"),1==c?a.style.cssText="box-shadow: 0 0 5px rgb(255, 60, 20), inset 0 0 5px rgb(255, 60, 20)":2==c&&(a.style.cssText="box-Shadow: 0 0 5px #C9B400, inset 0 0 5px #C9B400"),a.addEventListener("click",(t=>{o(t)}));const u=document.createElement("div");u.classList.add("task-title"),u.textContent=t;const m=document.createElement("div");m.classList.add("task-date"),m.textContent=e;const p=document.createElement("img");return p.src="images/edit.svg",p.setAttribute("alt","edit button"),p.addEventListener("click",(t=>{!function(t){const e=t.srcElement.parentElement.parentElement,i=+e.id;e.insertAdjacentElement("afterend",n(s[i].getTitle(),s[i].getDate(),s[i].getDescription(),s[i].getPriority(),s[i].getId())),e.remove()}(t)})),l.appendChild(m),l.appendChild(p),d.appendChild(a),d.appendChild(u),r.appendChild(d),r.appendChild(l),r}(t.getTitle(),t.getDate(),t.getId(),t.getPriority());c.insertBefore(e,i)}))}function d(){document.querySelectorAll(".task-span").forEach((t=>{t.remove()}))}function o(t){const e=t.srcElement.parentElement.parentElement,n=+e.id;s.splice(n,1),e.remove();for(let t=0;t<s.length;t++)s[t].setId(t);d(),r(l)}c.addEventListener("click",(()=>{document.querySelector("#tasks").insertBefore(n(null,null,null,3,"null"),c)}));let l="All";document.querySelectorAll(".menu-item").forEach(h);const a=document.querySelector(".projects"),u=t;for(let t=0;t<u.length;t++)a.appendChild(m(u[t]));function m(e){const n=document.createElement("div");n.classList.add("menu-item");const i=document.createElement("div");i.textContent=e;const s=document.createElement("img");return s.setAttribute("src","./images/trash-2.svg"),s.setAttribute("alt","trash icon"),s.addEventListener("click",(e=>{!function(e){const n=t.indexOf(e);n>-1&&(t.splice(n,1),localStorage.setItem("projectTitles",t))}(e.srcElement.previousElementSibling.textContent),e.srcElement.closest(".menu-item").remove()})),n.appendChild(i),n.appendChild(s),h(n),n}function p(t){t.srcElement.closest(".menu-form").remove()}function h(t){t.addEventListener("click",(t=>{const e=document.querySelector(".menu-selected");null!=e&&e.classList.remove("menu-selected"),t.srcElement.classList.add("menu-selected"),l=t.srcElement.firstChild.textContent,r(l)}))}document.querySelector(".project-title > svg").addEventListener("click",(()=>{document.querySelector(".projects").appendChild(function(){const e=document.createElement("div");e.classList.add("menu-form");const n=document.createElement("form");n.setAttribute("action",""),n.setAttribute("method","post");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","project-title"),i.setAttribute("name","projectTitle"),i.setAttribute("maxlength","15");const s=document.createElement("div");s.classList.add("project-buttons");const c=document.createElement("button");c.classList.add("add-button"),c.setAttribute("type","button"),c.textContent="Add";const r=document.createElement("button");return r.classList.add("cancel-button"),r.setAttribute("type","button"),r.textContent="Cancel",c.addEventListener("click",(e=>{!function(e){const n=e.srcElement.closest(".menu-form"),i=n.firstChild.firstChild.value;var s;n.insertAdjacentElement("afterend",m(i)),s=i,t.push(s),localStorage.setItem("projectTitles",t),p(e)}(e)})),r.addEventListener("click",(t=>{p(t)})),s.appendChild(c),s.appendChild(r),n.appendChild(i),n.appendChild(s),e.appendChild(n),e}())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,